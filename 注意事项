 
 demo.py文件中引进说明，在items.py中可以创建多个类
 from ABC.items import xx,xx
 
 xpath中的 string ,concat
 concat连接字符串
 response.xpath("concat(//div/span/text(),//div/p/text())")
 string提取标签的所有的字符串
 response.xpath("string(//div[@class='xx'])")
 选择器
 
 
 两个层级的网页传递的数据
 item={'':'','':'',}
 yield scrapy.Request(url,callback=self.parsefunc,meta={'item':item})
 
 def parsefunc(self,response):
  item=response.meta['item']
 
 
 
 
 在项目中可以写一个运行文件
 run.py 
 from scrapy import cdmline
 cmdline.execute('scrapy crawl douban_spider'.split())   #官方文件用的这个方法
 #cdmline.execute(['scrapy','crawl','douban_spider'])   等价
 
 
 
 在items文件中有两个或多个类的处理方法
 在pipeline文件中处理
 from jianshutotal.items import AItem, BItem
 查看信息：https://blog.csdn.net/qq_42630844/article/details/82500419
 class JianshutotalPipeline(object):
    def process_item(self, item, spider):
        if isinstance(item, JsTotalItem):
          items = dict(item)



xpath中的兄弟元素

前一位：
preceding-sibling::div[1]
后一位：
following-sibling::div[1]


前N位：
preceding-sibling::div[N]
后N位：
following-sibling::div[N]
'./preceding-sibling::div[1]'
          
          
          
        
 
 
 
 
 
 
 
 
 
